<?xml version="1.0" encoding="UTF-8"?>
<Symbols version="2.0">
    <File name="C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\ucrt\stdio.h" id="1"/>
    <File name="C:\unittest_calc\calculation\calculation\main.c" id="2"/>
    <Function id="__acrt_iob_func" name="ZP__acrt_iob_func5X" decorated_name="FILE * __acrt_iob_func(unsigned int)" sorted_name="__acrt_iob_func" needed="true">
      <stub_declaration complete="true">
         <declaration_prefix>EXTERN_C_LINKAGE FILE * __cdecl </declaration_prefix>
         <declaration_suffix>_Stub___acrt_iob_func (unsigned _Ix) </declaration_suffix>
         <orig_declaration>EXTERN_C_LINKAGE FILE * __cdecl __acrt_iob_func (unsigned _Ix) </orig_declaration>
         <callback_call>CPPTEST_CALL_STUB_CALLBACK(&quot;__acrt_iob_func&quot;, &amp;__return, _Ix)</callback_call>
         <callback_orig_call>*__return = __acrt_iob_func(_Ix)</callback_orig_call>
         <callback_user_id>__acrt_iob_func</callback_user_id>
         <callback_params>CppTest_StubCallInfo* stubCallInfo, FILE ** __return, unsigned _Ix</callback_params>
         <trigger_name>__acrt_iob_func</trigger_name>
         <trigger_call>CPPTEST_ACTUAL_CALL_C(&quot;__acrt_iob_func&quot;)-&gt;WithRefArg(&quot;_Ix&quot;, &amp;_Ix, tgr_uint_type())-&gt;WithRefArg(&quot;__return&quot;, &amp;__return, tgr_ptr_type(tgr_void_type()))-&gt;WithRefArg(&quot;__callOrig&quot;, &amp;__callOrig, tgr_int_type())-&gt;End()</trigger_call>
         <post_trigger_call>CPPTEST_ACTUAL_AFTER_CALL_C(&quot;__acrt_iob_func&quot;)-&gt;WithRefArg(&quot;_Ix&quot;, &amp;_Ix, tgr_uint_type())-&gt;WithRefArg(&quot;__return&quot;, &amp;__return, tgr_ptr_type(tgr_void_type()))-&gt;End()</post_trigger_call>
         <orig_call>FILE * __return = __acrt_iob_func(_Ix)</orig_call>
         <return_var_decl>FILE * __return = 0</return_var_decl>
         <return_var_expression>return __return</return_var_expression>
         <system_decl_header>corecrt_wstdio.h</system_decl_header>
      </stub_declaration>
    </Function>
    <Function id="__stdio_common_vfprintf" name="ZbH__stdio_common_vfprintf5X" decorated_name="int __stdio_common_vfprintf(unsigned long long, FILE *, const char *, _locale_t, va_list)" sorted_name="__stdio_common_vfprintf" needed="true">
      <stub_declaration complete="true">
         <declaration_prefix>EXTERN_C_LINKAGE int __cdecl </declaration_prefix>
         <declaration_suffix>_Stub___stdio_common_vfprintf (unsigned __int64 _Options, FILE * _Stream, const char * _Format, _locale_t _Locale, va_list _ArgList) </declaration_suffix>
         <orig_declaration>EXTERN_C_LINKAGE int __cdecl __stdio_common_vfprintf (unsigned __int64 _Options, FILE * _Stream, const char * _Format, _locale_t _Locale, va_list _ArgList) </orig_declaration>
         <callback_call>CPPTEST_CALL_STUB_CALLBACK(&quot;__stdio_common_vfprintf&quot;, &amp;__return, _Options, _Stream, _Format, _Locale, _ArgList)</callback_call>
         <callback_orig_call>*__return = __stdio_common_vfprintf(_Options, _Stream, _Format, _Locale, _ArgList)</callback_orig_call>
         <callback_user_id>__stdio_common_vfprintf</callback_user_id>
         <callback_params>CppTest_StubCallInfo* stubCallInfo, int* __return, unsigned __int64 _Options, FILE * _Stream, const char * _Format, _locale_t _Locale, va_list _ArgList</callback_params>
         <trigger_name>__stdio_common_vfprintf</trigger_name>
         <trigger_call>CPPTEST_ACTUAL_CALL_C(&quot;__stdio_common_vfprintf&quot;)-&gt;WithRefArg(&quot;_Options&quot;, &amp;_Options, tgr_ullong_type())-&gt;WithRefArg(&quot;_Stream&quot;, &amp;_Stream, tgr_ptr_type(tgr_void_type()))-&gt;WithRefArg(&quot;_Format&quot;, &amp;_Format, tgr_ptr_type(tgr_char_type()))-&gt;WithRefArg(&quot;_Locale&quot;, &amp;_Locale, tgr_ptr_type(tgr_void_type()))-&gt;WithRefArg(&quot;_ArgList&quot;, &amp;_ArgList, tgr_ptr_type(tgr_char_type()))-&gt;WithRefArg(&quot;__return&quot;, &amp;__return, tgr_int_type())-&gt;WithRefArg(&quot;__callOrig&quot;, &amp;__callOrig, tgr_int_type())-&gt;End()</trigger_call>
         <post_trigger_call>CPPTEST_ACTUAL_AFTER_CALL_C(&quot;__stdio_common_vfprintf&quot;)-&gt;WithRefArg(&quot;_Options&quot;, &amp;_Options, tgr_ullong_type())-&gt;WithRefArg(&quot;_Stream&quot;, &amp;_Stream, tgr_ptr_type(tgr_void_type()))-&gt;WithRefArg(&quot;_Format&quot;, &amp;_Format, tgr_ptr_type(tgr_char_type()))-&gt;WithRefArg(&quot;_Locale&quot;, &amp;_Locale, tgr_ptr_type(tgr_void_type()))-&gt;WithRefArg(&quot;_ArgList&quot;, &amp;_ArgList, tgr_ptr_type(tgr_char_type()))-&gt;WithRefArg(&quot;__return&quot;, &amp;__return, tgr_int_type())-&gt;End()</post_trigger_call>
         <orig_call>int __return = __stdio_common_vfprintf(_Options, _Stream, _Format, _Locale, _ArgList)</orig_call>
         <return_var_decl>int __return = 0</return_var_decl>
         <return_var_expression>return __return</return_var_expression>
         <system_decl_header>stdio.h</system_decl_header>
      </stub_declaration>
    </Function>
    <Function id="printf" name="ZGprintfX" decorated_name="int printf(const char *const, ...)" sorted_name="printf" stub_used="true">
      <stub_declaration complete="true">
         <declaration_prefix>EXTERN_C_LINKAGE int __cdecl </declaration_prefix>
         <declaration_suffix>_Stub_printf (const char *const _Format, ...) </declaration_suffix>
         <orig_declaration>EXTERN_C_LINKAGE int __cdecl printf (const char *const _Format, ...) </orig_declaration>
         <callback_call>CPPTEST_CALL_STUB_CALLBACK(&quot;printf&quot;, &amp;__return, _Format)</callback_call>
         <callback_user_id>printf</callback_user_id>
         <callback_params>CppTest_StubCallInfo* stubCallInfo, int* __return, const char *const _Format</callback_params>
         <trigger_name>printf</trigger_name>
         <trigger_call>CPPTEST_ACTUAL_CALL_C(&quot;printf&quot;)-&gt;WithRefArg(&quot;_Format&quot;, &amp;_Format, tgr_ptr_type(tgr_char_type()))-&gt;WithRefArg(&quot;__return&quot;, &amp;__return, tgr_int_type())-&gt;End()</trigger_call>
         <post_trigger_call>CPPTEST_ACTUAL_AFTER_CALL_C(&quot;printf&quot;)-&gt;WithRefArg(&quot;_Format&quot;, &amp;_Format, tgr_ptr_type(tgr_char_type()))-&gt;WithRefArg(&quot;__return&quot;, &amp;__return, tgr_int_type())-&gt;End()</post_trigger_call>
         <return_var_decl>int __return = 0</return_var_decl>
         <return_var_expression>return __return</return_var_expression>
         <system_decl_header>stdio.h</system_decl_header>
      </stub_declaration>
      <definition type="orig" source="code" file_id="1" line="948" col="26"/>
    </Function>
    <Function id="strlen" name="ZGstrlenX" decorated_name="size_t strlen(const char *)" sorted_name="strlen" stub_used="true" needed="true">
      <stub_declaration complete="true">
         <declaration_prefix>EXTERN_C_LINKAGE size_t __cdecl </declaration_prefix>
         <declaration_suffix>_Stub_strlen (const char * _Str) </declaration_suffix>
         <orig_declaration>EXTERN_C_LINKAGE size_t __cdecl strlen (const char * _Str) </orig_declaration>
         <callback_call>CPPTEST_CALL_STUB_CALLBACK(&quot;strlen&quot;, &amp;__return, _Str)</callback_call>
         <callback_orig_call>*__return = strlen(_Str)</callback_orig_call>
         <callback_user_id>strlen</callback_user_id>
         <callback_params>CppTest_StubCallInfo* stubCallInfo, size_t* __return, const char * _Str</callback_params>
         <trigger_name>strlen</trigger_name>
         <trigger_call>CPPTEST_ACTUAL_CALL_C(&quot;strlen&quot;)-&gt;WithRefArg(&quot;_Str&quot;, &amp;_Str, tgr_ptr_type(tgr_char_type()))-&gt;WithRefArg(&quot;__return&quot;, &amp;__return, tgr_uint_type())-&gt;WithRefArg(&quot;__callOrig&quot;, &amp;__callOrig, tgr_int_type())-&gt;End()</trigger_call>
         <post_trigger_call>CPPTEST_ACTUAL_AFTER_CALL_C(&quot;strlen&quot;)-&gt;WithRefArg(&quot;_Str&quot;, &amp;_Str, tgr_ptr_type(tgr_char_type()))-&gt;WithRefArg(&quot;__return&quot;, &amp;__return, tgr_uint_type())-&gt;End()</post_trigger_call>
         <orig_call>size_t __return = strlen(_Str)</orig_call>
         <return_var_decl>size_t __return = 0U</return_var_decl>
         <return_var_expression>return __return</return_var_expression>
         <system_decl_header>string.h</system_decl_header>
      </stub_declaration>
    </Function>
    <Function id="Input_number" name="ZMInput_numberX" decorated_name="void Input_number(void)" sorted_name="Input_number" stub_used="true" needed="true" prototyped="false">
      <stub_declaration complete="true">
         <declaration_prefix>EXTERN_C_LINKAGE void </declaration_prefix>
         <declaration_suffix>_Stub_Input_number (void) </declaration_suffix>
         <orig_declaration>EXTERN_C_LINKAGE void Input_number () </orig_declaration>
         <callback_call>CPPTEST_CALL_STUB_CALLBACK(&quot;Input_number&quot;)</callback_call>
         <callback_orig_call>Input_number()</callback_orig_call>
         <callback_user_id>Input_number</callback_user_id>
         <callback_params>CppTest_StubCallInfo* stubCallInfo</callback_params>
         <trigger_name>Input_number</trigger_name>
         <trigger_call>CPPTEST_ACTUAL_CALL_C(&quot;Input_number&quot;)-&gt;WithRefArg(&quot;__callOrig&quot;, &amp;__callOrig, tgr_int_type())-&gt;End()</trigger_call>
         <post_trigger_call>CPPTEST_ACTUAL_AFTER_CALL_C(&quot;Input_number&quot;)-&gt;End()</post_trigger_call>
         <orig_call>Input_number()</orig_call>
      </stub_declaration>
    </Function>
    <Function id="main" name="ZEmainX" decorated_name="void main(void)" sorted_name="main" prototyped="false">
      <definition type="orig" source="code" file_id="2" line="5" col="6"/>
    </Function>
    <Function id="output" name="ZGoutputX" decorated_name="void output(long double *)" sorted_name="output">
      <definition type="orig" source="code" file_id="2" line="12" col="6"/>
    </Function>
</Symbols>

