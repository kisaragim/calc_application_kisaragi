<?xml version="1.0" encoding="UTF-8"?>
<Symbols version="2.0">
    <File name="C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\ucrt\stdio.h" id="1"/>
    <File name="C:\unittest_calc\calculation\calculation\Input_number.c" id="2"/>
    <File name="C:\unittest_calc\calculation\calculation\tests\autogenerated\ソース ファイル\TestSuite_Input_number_c.c" id="3"/>
    <Function id="___mb_cur_max_func" name="ZbC___mb_cur_max_func5X" decorated_name="int ___mb_cur_max_func(void)" sorted_name="___mb_cur_max_func" stub_used="true" needed="true">
      <stub_declaration complete="true">
         <declaration_prefix>EXTERN_C_LINKAGE int __cdecl </declaration_prefix>
         <declaration_suffix>_Stub____mb_cur_max_func (void) </declaration_suffix>
         <orig_declaration>EXTERN_C_LINKAGE int __cdecl ___mb_cur_max_func () </orig_declaration>
         <callback_call>CPPTEST_CALL_STUB_CALLBACK(&quot;___mb_cur_max_func&quot;, &amp;__return)</callback_call>
         <callback_orig_call>*__return = ___mb_cur_max_func()</callback_orig_call>
         <callback_user_id>___mb_cur_max_func</callback_user_id>
         <callback_params>CppTest_StubCallInfo* stubCallInfo, int* __return</callback_params>
         <trigger_name>___mb_cur_max_func</trigger_name>
         <trigger_call>CPPTEST_ACTUAL_CALL_C(&quot;___mb_cur_max_func&quot;)-&gt;WithRefArg(&quot;__return&quot;, &amp;__return, tgr_int_type())-&gt;WithRefArg(&quot;__callOrig&quot;, &amp;__callOrig, tgr_int_type())-&gt;End()</trigger_call>
         <post_trigger_call>CPPTEST_ACTUAL_AFTER_CALL_C(&quot;___mb_cur_max_func&quot;)-&gt;WithRefArg(&quot;__return&quot;, &amp;__return, tgr_int_type())-&gt;End()</post_trigger_call>
         <orig_call>int __return = ___mb_cur_max_func()</orig_call>
         <return_var_decl>int __return = 0</return_var_decl>
         <return_var_expression>return __return</return_var_expression>
      </stub_declaration>
    </Function>
    <Function id="mblen" name="ZFmblen5X" decorated_name="int mblen(const char *, size_t)" sorted_name="mblen" stub_used="true" needed="true">
      <stub_declaration complete="true">
         <declaration_prefix>EXTERN_C_LINKAGE int __cdecl </declaration_prefix>
         <declaration_suffix>_Stub_mblen (const char * _Ch, size_t _MaxCount) </declaration_suffix>
         <orig_declaration>EXTERN_C_LINKAGE int __cdecl mblen (const char * _Ch, size_t _MaxCount) </orig_declaration>
         <callback_call>CPPTEST_CALL_STUB_CALLBACK(&quot;mblen&quot;, &amp;__return, _Ch, _MaxCount)</callback_call>
         <callback_orig_call>*__return = mblen(_Ch, _MaxCount)</callback_orig_call>
         <callback_user_id>mblen</callback_user_id>
         <callback_params>CppTest_StubCallInfo* stubCallInfo, int* __return, const char * _Ch, size_t _MaxCount</callback_params>
         <trigger_name>mblen</trigger_name>
         <trigger_call>CPPTEST_ACTUAL_CALL_C(&quot;mblen&quot;)-&gt;WithRefArg(&quot;_Ch&quot;, &amp;_Ch, tgr_ptr_type(tgr_char_type()))-&gt;WithRefArg(&quot;_MaxCount&quot;, &amp;_MaxCount, tgr_uint_type())-&gt;WithRefArg(&quot;__return&quot;, &amp;__return, tgr_int_type())-&gt;WithRefArg(&quot;__callOrig&quot;, &amp;__callOrig, tgr_int_type())-&gt;End()</trigger_call>
         <post_trigger_call>CPPTEST_ACTUAL_AFTER_CALL_C(&quot;mblen&quot;)-&gt;WithRefArg(&quot;_Ch&quot;, &amp;_Ch, tgr_ptr_type(tgr_char_type()))-&gt;WithRefArg(&quot;_MaxCount&quot;, &amp;_MaxCount, tgr_uint_type())-&gt;WithRefArg(&quot;__return&quot;, &amp;__return, tgr_int_type())-&gt;End()</post_trigger_call>
         <orig_call>int __return = mblen(_Ch, _MaxCount)</orig_call>
         <return_var_decl>int __return = 0</return_var_decl>
         <return_var_expression>return __return</return_var_expression>
         <system_decl_header>stdlib.h</system_decl_header>
      </stub_declaration>
    </Function>
    <Function id="__acrt_iob_func" name="ZP__acrt_iob_func5X" decorated_name="FILE * __acrt_iob_func(unsigned int)" sorted_name="__acrt_iob_func" stub_used="true" needed="true">
      <stub_declaration complete="true">
         <declaration_prefix>EXTERN_C_LINKAGE FILE * __cdecl </declaration_prefix>
         <declaration_suffix>_Stub___acrt_iob_func (unsigned _Ix) </declaration_suffix>
         <orig_declaration>EXTERN_C_LINKAGE FILE * __cdecl __acrt_iob_func (unsigned _Ix) </orig_declaration>
         <callback_call>CPPTEST_CALL_STUB_CALLBACK(&quot;__acrt_iob_func&quot;, &amp;__return, _Ix)</callback_call>
         <callback_orig_call>*__return = __acrt_iob_func(_Ix)</callback_orig_call>
         <callback_user_id>__acrt_iob_func</callback_user_id>
         <callback_params>CppTest_StubCallInfo* stubCallInfo, FILE ** __return, unsigned _Ix</callback_params>
         <trigger_name>__acrt_iob_func</trigger_name>
         <trigger_call>CPPTEST_ACTUAL_CALL_C(&quot;__acrt_iob_func&quot;)-&gt;WithRefArg(&quot;_Ix&quot;, &amp;_Ix, tgr_uint_type())-&gt;WithRefArg(&quot;__return&quot;, &amp;__return, tgr_ptr_type(tgr_void_type()))-&gt;WithRefArg(&quot;__callOrig&quot;, &amp;__callOrig, tgr_int_type())-&gt;End()</trigger_call>
         <post_trigger_call>CPPTEST_ACTUAL_AFTER_CALL_C(&quot;__acrt_iob_func&quot;)-&gt;WithRefArg(&quot;_Ix&quot;, &amp;_Ix, tgr_uint_type())-&gt;WithRefArg(&quot;__return&quot;, &amp;__return, tgr_ptr_type(tgr_void_type()))-&gt;End()</post_trigger_call>
         <orig_call>FILE * __return = __acrt_iob_func(_Ix)</orig_call>
         <return_var_decl>FILE * __return = 0</return_var_decl>
         <return_var_expression>return __return</return_var_expression>
         <system_decl_header>corecrt_wstdio.h</system_decl_header>
      </stub_declaration>
    </Function>
    <Function id="fgets" name="ZFfgets5X" decorated_name="char * fgets(char *, int, FILE *)" sorted_name="fgets" stub_used="true" needed="true">
      <stub_declaration complete="true">
         <declaration_prefix>EXTERN_C_LINKAGE char * __cdecl </declaration_prefix>
         <declaration_suffix>_Stub_fgets (char * _Buffer, int _MaxCount, FILE * _Stream) </declaration_suffix>
         <orig_declaration>EXTERN_C_LINKAGE char * __cdecl fgets (char * _Buffer, int _MaxCount, FILE * _Stream) </orig_declaration>
         <callback_call>CPPTEST_CALL_STUB_CALLBACK(&quot;fgets&quot;, &amp;__return, _Buffer, _MaxCount, _Stream)</callback_call>
         <callback_orig_call>*__return = fgets(_Buffer, _MaxCount, _Stream)</callback_orig_call>
         <callback_user_id>fgets</callback_user_id>
         <callback_params>CppTest_StubCallInfo* stubCallInfo, char ** __return, char * _Buffer, int _MaxCount, FILE * _Stream</callback_params>
         <trigger_name>fgets</trigger_name>
         <trigger_call>CPPTEST_ACTUAL_CALL_C(&quot;fgets&quot;)-&gt;WithRefArg(&quot;_Buffer&quot;, &amp;_Buffer, tgr_ptr_type(tgr_char_type()))-&gt;WithRefArg(&quot;_MaxCount&quot;, &amp;_MaxCount, tgr_int_type())-&gt;WithRefArg(&quot;_Stream&quot;, &amp;_Stream, tgr_ptr_type(tgr_void_type()))-&gt;WithRefArg(&quot;__return&quot;, &amp;__return, tgr_ptr_type(tgr_char_type()))-&gt;WithRefArg(&quot;__callOrig&quot;, &amp;__callOrig, tgr_int_type())-&gt;End()</trigger_call>
         <post_trigger_call>CPPTEST_ACTUAL_AFTER_CALL_C(&quot;fgets&quot;)-&gt;WithRefArg(&quot;_Buffer&quot;, &amp;_Buffer, tgr_ptr_type(tgr_char_type()))-&gt;WithRefArg(&quot;_MaxCount&quot;, &amp;_MaxCount, tgr_int_type())-&gt;WithRefArg(&quot;_Stream&quot;, &amp;_Stream, tgr_ptr_type(tgr_void_type()))-&gt;WithRefArg(&quot;__return&quot;, &amp;__return, tgr_ptr_type(tgr_char_type()))-&gt;End()</post_trigger_call>
         <orig_call>char * __return = fgets(_Buffer, _MaxCount, _Stream)</orig_call>
         <return_var_decl>char * __return = _Buffer</return_var_decl>
         <return_var_expression>return __return</return_var_expression>
         <system_decl_header>stdio.h</system_decl_header>
      </stub_declaration>
    </Function>
    <Function id="__stdio_common_vfprintf" name="ZbH__stdio_common_vfprintf5X" decorated_name="int __stdio_common_vfprintf(unsigned long long, FILE *, const char *, _locale_t, va_list)" sorted_name="__stdio_common_vfprintf" needed="true">
      <stub_declaration complete="true">
         <declaration_prefix>EXTERN_C_LINKAGE int __cdecl </declaration_prefix>
         <declaration_suffix>_Stub___stdio_common_vfprintf (unsigned __int64 _Options, FILE * _Stream, const char * _Format, _locale_t _Locale, va_list _ArgList) </declaration_suffix>
         <orig_declaration>EXTERN_C_LINKAGE int __cdecl __stdio_common_vfprintf (unsigned __int64 _Options, FILE * _Stream, const char * _Format, _locale_t _Locale, va_list _ArgList) </orig_declaration>
         <callback_call>CPPTEST_CALL_STUB_CALLBACK(&quot;__stdio_common_vfprintf&quot;, &amp;__return, _Options, _Stream, _Format, _Locale, _ArgList)</callback_call>
         <callback_orig_call>*__return = __stdio_common_vfprintf(_Options, _Stream, _Format, _Locale, _ArgList)</callback_orig_call>
         <callback_user_id>__stdio_common_vfprintf</callback_user_id>
         <callback_params>CppTest_StubCallInfo* stubCallInfo, int* __return, unsigned __int64 _Options, FILE * _Stream, const char * _Format, _locale_t _Locale, va_list _ArgList</callback_params>
         <trigger_name>__stdio_common_vfprintf</trigger_name>
         <trigger_call>CPPTEST_ACTUAL_CALL_C(&quot;__stdio_common_vfprintf&quot;)-&gt;WithRefArg(&quot;_Options&quot;, &amp;_Options, tgr_ullong_type())-&gt;WithRefArg(&quot;_Stream&quot;, &amp;_Stream, tgr_ptr_type(tgr_void_type()))-&gt;WithRefArg(&quot;_Format&quot;, &amp;_Format, tgr_ptr_type(tgr_char_type()))-&gt;WithRefArg(&quot;_Locale&quot;, &amp;_Locale, tgr_ptr_type(tgr_void_type()))-&gt;WithRefArg(&quot;_ArgList&quot;, &amp;_ArgList, tgr_ptr_type(tgr_char_type()))-&gt;WithRefArg(&quot;__return&quot;, &amp;__return, tgr_int_type())-&gt;WithRefArg(&quot;__callOrig&quot;, &amp;__callOrig, tgr_int_type())-&gt;End()</trigger_call>
         <post_trigger_call>CPPTEST_ACTUAL_AFTER_CALL_C(&quot;__stdio_common_vfprintf&quot;)-&gt;WithRefArg(&quot;_Options&quot;, &amp;_Options, tgr_ullong_type())-&gt;WithRefArg(&quot;_Stream&quot;, &amp;_Stream, tgr_ptr_type(tgr_void_type()))-&gt;WithRefArg(&quot;_Format&quot;, &amp;_Format, tgr_ptr_type(tgr_char_type()))-&gt;WithRefArg(&quot;_Locale&quot;, &amp;_Locale, tgr_ptr_type(tgr_void_type()))-&gt;WithRefArg(&quot;_ArgList&quot;, &amp;_ArgList, tgr_ptr_type(tgr_char_type()))-&gt;WithRefArg(&quot;__return&quot;, &amp;__return, tgr_int_type())-&gt;End()</post_trigger_call>
         <orig_call>int __return = __stdio_common_vfprintf(_Options, _Stream, _Format, _Locale, _ArgList)</orig_call>
         <return_var_decl>int __return = 0</return_var_decl>
         <return_var_expression>return __return</return_var_expression>
         <system_decl_header>stdio.h</system_decl_header>
      </stub_declaration>
    </Function>
    <Function id="printf" name="ZGprintfX" decorated_name="int printf(const char *const, ...)" sorted_name="printf" stub_used="true">
      <stub_declaration complete="true">
         <declaration_prefix>EXTERN_C_LINKAGE int __cdecl </declaration_prefix>
         <declaration_suffix>_Stub_printf (const char *const _Format, ...) </declaration_suffix>
         <orig_declaration>EXTERN_C_LINKAGE int __cdecl printf (const char *const _Format, ...) </orig_declaration>
         <callback_call>CPPTEST_CALL_STUB_CALLBACK(&quot;printf&quot;, &amp;__return, _Format)</callback_call>
         <callback_user_id>printf</callback_user_id>
         <callback_params>CppTest_StubCallInfo* stubCallInfo, int* __return, const char *const _Format</callback_params>
         <trigger_name>printf</trigger_name>
         <trigger_call>CPPTEST_ACTUAL_CALL_C(&quot;printf&quot;)-&gt;WithRefArg(&quot;_Format&quot;, &amp;_Format, tgr_ptr_type(tgr_char_type()))-&gt;WithRefArg(&quot;__return&quot;, &amp;__return, tgr_int_type())-&gt;End()</trigger_call>
         <post_trigger_call>CPPTEST_ACTUAL_AFTER_CALL_C(&quot;printf&quot;)-&gt;WithRefArg(&quot;_Format&quot;, &amp;_Format, tgr_ptr_type(tgr_char_type()))-&gt;WithRefArg(&quot;__return&quot;, &amp;__return, tgr_int_type())-&gt;End()</post_trigger_call>
         <return_var_decl>int __return = 0</return_var_decl>
         <return_var_expression>return __return</return_var_expression>
         <system_decl_header>stdio.h</system_decl_header>
      </stub_declaration>
      <definition type="orig" source="code" file_id="1" line="948" col="26"/>
    </Function>
    <Function id="strlen" name="ZGstrlenX" decorated_name="size_t strlen(const char *)" sorted_name="strlen" stub_used="true" needed="true">
      <stub_declaration complete="true">
         <declaration_prefix>EXTERN_C_LINKAGE size_t __cdecl </declaration_prefix>
         <declaration_suffix>_Stub_strlen (const char * _Str) </declaration_suffix>
         <orig_declaration>EXTERN_C_LINKAGE size_t __cdecl strlen (const char * _Str) </orig_declaration>
         <callback_call>CPPTEST_CALL_STUB_CALLBACK(&quot;strlen&quot;, &amp;__return, _Str)</callback_call>
         <callback_orig_call>*__return = strlen(_Str)</callback_orig_call>
         <callback_user_id>strlen</callback_user_id>
         <callback_params>CppTest_StubCallInfo* stubCallInfo, size_t* __return, const char * _Str</callback_params>
         <trigger_name>strlen</trigger_name>
         <trigger_call>CPPTEST_ACTUAL_CALL_C(&quot;strlen&quot;)-&gt;WithRefArg(&quot;_Str&quot;, &amp;_Str, tgr_ptr_type(tgr_char_type()))-&gt;WithRefArg(&quot;__return&quot;, &amp;__return, tgr_uint_type())-&gt;WithRefArg(&quot;__callOrig&quot;, &amp;__callOrig, tgr_int_type())-&gt;End()</trigger_call>
         <post_trigger_call>CPPTEST_ACTUAL_AFTER_CALL_C(&quot;strlen&quot;)-&gt;WithRefArg(&quot;_Str&quot;, &amp;_Str, tgr_ptr_type(tgr_char_type()))-&gt;WithRefArg(&quot;__return&quot;, &amp;__return, tgr_uint_type())-&gt;End()</post_trigger_call>
         <orig_call>size_t __return = strlen(_Str)</orig_call>
         <return_var_decl>size_t __return = 0U</return_var_decl>
         <return_var_expression>return __return</return_var_expression>
         <system_decl_header>string.h</system_decl_header>
      </stub_declaration>
    </Function>
    <Function id="calculation" name="ZLcalculationX" decorated_name="void calculation(char *)" sorted_name="calculation" stub_used="true" needed="true">
      <stub_declaration complete="true">
         <declaration_prefix>EXTERN_C_LINKAGE void </declaration_prefix>
         <declaration_suffix>_Stub_calculation (char * calc) </declaration_suffix>
         <orig_declaration>EXTERN_C_LINKAGE void calculation (char * calc) </orig_declaration>
         <callback_call>CPPTEST_CALL_STUB_CALLBACK(&quot;calculation&quot;, calc)</callback_call>
         <callback_orig_call>calculation(calc)</callback_orig_call>
         <callback_user_id>calculation</callback_user_id>
         <callback_params>CppTest_StubCallInfo* stubCallInfo, char * calc</callback_params>
         <trigger_name>calculation</trigger_name>
         <trigger_call>CPPTEST_ACTUAL_CALL_C(&quot;calculation&quot;)-&gt;WithRefArg(&quot;calc&quot;, &amp;calc, tgr_ptr_type(tgr_char_type()))-&gt;WithRefArg(&quot;__callOrig&quot;, &amp;__callOrig, tgr_int_type())-&gt;End()</trigger_call>
         <post_trigger_call>CPPTEST_ACTUAL_AFTER_CALL_C(&quot;calculation&quot;)-&gt;WithRefArg(&quot;calc&quot;, &amp;calc, tgr_ptr_type(tgr_char_type()))-&gt;End()</post_trigger_call>
         <orig_call>calculation(calc)</orig_call>
      </stub_declaration>
    </Function>
    <Function id="isspace" name="ZHisspace5X" decorated_name="int isspace(int)" sorted_name="isspace" stub_used="true" needed="true">
      <stub_declaration complete="true">
         <declaration_prefix>EXTERN_C_LINKAGE int __cdecl </declaration_prefix>
         <declaration_suffix>_Stub_isspace (int _C) </declaration_suffix>
         <orig_declaration>EXTERN_C_LINKAGE int __cdecl isspace (int _C) </orig_declaration>
         <callback_call>CPPTEST_CALL_STUB_CALLBACK(&quot;isspace&quot;, &amp;__return, _C)</callback_call>
         <callback_orig_call>*__return = isspace(_C)</callback_orig_call>
         <callback_user_id>isspace</callback_user_id>
         <callback_params>CppTest_StubCallInfo* stubCallInfo, int* __return, int _C</callback_params>
         <trigger_name>isspace</trigger_name>
         <trigger_call>CPPTEST_ACTUAL_CALL_C(&quot;isspace&quot;)-&gt;WithRefArg(&quot;_C&quot;, &amp;_C, tgr_int_type())-&gt;WithRefArg(&quot;__return&quot;, &amp;__return, tgr_int_type())-&gt;WithRefArg(&quot;__callOrig&quot;, &amp;__callOrig, tgr_int_type())-&gt;End()</trigger_call>
         <post_trigger_call>CPPTEST_ACTUAL_AFTER_CALL_C(&quot;isspace&quot;)-&gt;WithRefArg(&quot;_C&quot;, &amp;_C, tgr_int_type())-&gt;WithRefArg(&quot;__return&quot;, &amp;__return, tgr_int_type())-&gt;End()</post_trigger_call>
         <orig_call>int __return = isspace(_C)</orig_call>
         <return_var_decl>int __return = 0</return_var_decl>
         <return_var_expression>return __return</return_var_expression>
      </stub_declaration>
    </Function>
    <Function id="setlocale" name="ZJsetlocale5X" decorated_name="char * setlocale(int, const char *)" sorted_name="setlocale" stub_used="true" needed="true">
      <stub_declaration complete="true">
         <declaration_prefix>EXTERN_C_LINKAGE char * __cdecl </declaration_prefix>
         <declaration_suffix>_Stub_setlocale (int _Category, const char * _Locale) </declaration_suffix>
         <orig_declaration>EXTERN_C_LINKAGE char * __cdecl setlocale (int _Category, const char * _Locale) </orig_declaration>
         <callback_call>CPPTEST_CALL_STUB_CALLBACK(&quot;setlocale&quot;, &amp;__return, _Category, _Locale)</callback_call>
         <callback_orig_call>*__return = setlocale(_Category, _Locale)</callback_orig_call>
         <callback_user_id>setlocale</callback_user_id>
         <callback_params>CppTest_StubCallInfo* stubCallInfo, char ** __return, int _Category, const char * _Locale</callback_params>
         <trigger_name>setlocale</trigger_name>
         <trigger_call>CPPTEST_ACTUAL_CALL_C(&quot;setlocale&quot;)-&gt;WithRefArg(&quot;_Category&quot;, &amp;_Category, tgr_int_type())-&gt;WithRefArg(&quot;_Locale&quot;, &amp;_Locale, tgr_ptr_type(tgr_char_type()))-&gt;WithRefArg(&quot;__return&quot;, &amp;__return, tgr_ptr_type(tgr_char_type()))-&gt;WithRefArg(&quot;__callOrig&quot;, &amp;__callOrig, tgr_int_type())-&gt;End()</trigger_call>
         <post_trigger_call>CPPTEST_ACTUAL_AFTER_CALL_C(&quot;setlocale&quot;)-&gt;WithRefArg(&quot;_Category&quot;, &amp;_Category, tgr_int_type())-&gt;WithRefArg(&quot;_Locale&quot;, &amp;_Locale, tgr_ptr_type(tgr_char_type()))-&gt;WithRefArg(&quot;__return&quot;, &amp;__return, tgr_ptr_type(tgr_char_type()))-&gt;End()</post_trigger_call>
         <orig_call>char * __return = setlocale(_Category, _Locale)</orig_call>
         <return_var_decl>char * __return = 0</return_var_decl>
         <return_var_expression>return __return</return_var_expression>
      </stub_declaration>
    </Function>
    <Function id="Input_number" name="ZMInput_numberX" decorated_name="void Input_number(void)" sorted_name="Input_number" prototyped="false">
      <definition type="orig" source="code" file_id="2" line="9" col="6"/>
    </Function>
    <Function id="Delete_space" name="ZMDelete_spaceX" decorated_name="char Delete_space(char *)" sorted_name="Delete_space" stub_used="true">
      <stub_declaration complete="true">
         <declaration_prefix>EXTERN_C_LINKAGE char </declaration_prefix>
         <declaration_suffix>_Stub_Delete_space (char * calc) </declaration_suffix>
         <orig_declaration>EXTERN_C_LINKAGE char Delete_space (char * calc) </orig_declaration>
         <callback_call>CPPTEST_CALL_STUB_CALLBACK(&quot;Delete_space&quot;, &amp;__return, calc)</callback_call>
         <callback_orig_call>*__return = Delete_space(calc)</callback_orig_call>
         <callback_user_id>Delete_space</callback_user_id>
         <callback_params>CppTest_StubCallInfo* stubCallInfo, char* __return, char * calc</callback_params>
         <trigger_name>Delete_space</trigger_name>
         <trigger_call>CPPTEST_ACTUAL_CALL_C(&quot;Delete_space&quot;)-&gt;WithRefArg(&quot;calc&quot;, &amp;calc, tgr_ptr_type(tgr_char_type()))-&gt;WithRefArg(&quot;__return&quot;, &amp;__return, tgr_char_type())-&gt;WithRefArg(&quot;__callOrig&quot;, &amp;__callOrig, tgr_int_type())-&gt;End()</trigger_call>
         <post_trigger_call>CPPTEST_ACTUAL_AFTER_CALL_C(&quot;Delete_space&quot;)-&gt;WithRefArg(&quot;calc&quot;, &amp;calc, tgr_ptr_type(tgr_char_type()))-&gt;WithRefArg(&quot;__return&quot;, &amp;__return, tgr_char_type())-&gt;End()</post_trigger_call>
         <orig_call>char __return = Delete_space(calc)</orig_call>
         <return_var_decl>char __return = &apos;\0&apos;</return_var_decl>
         <return_var_expression>return __return</return_var_expression>
      </stub_declaration>
      <definition type="orig" source="code" file_id="2" line="73" col="6"/>
    </Function>
    <Function id="Check_number" name="ZMCheck_numberX" decorated_name="int Check_number(char *)" sorted_name="Check_number" stub_used="true">
      <stub_declaration complete="true">
         <declaration_prefix>EXTERN_C_LINKAGE int </declaration_prefix>
         <declaration_suffix>_Stub_Check_number (char * calc) </declaration_suffix>
         <orig_declaration>EXTERN_C_LINKAGE int Check_number (char * calc) </orig_declaration>
         <callback_call>CPPTEST_CALL_STUB_CALLBACK(&quot;Check_number&quot;, &amp;__return, calc)</callback_call>
         <callback_orig_call>*__return = Check_number(calc)</callback_orig_call>
         <callback_user_id>Check_number</callback_user_id>
         <callback_params>CppTest_StubCallInfo* stubCallInfo, int* __return, char * calc</callback_params>
         <trigger_name>Check_number</trigger_name>
         <trigger_call>CPPTEST_ACTUAL_CALL_C(&quot;Check_number&quot;)-&gt;WithRefArg(&quot;calc&quot;, &amp;calc, tgr_ptr_type(tgr_char_type()))-&gt;WithRefArg(&quot;__return&quot;, &amp;__return, tgr_int_type())-&gt;WithRefArg(&quot;__callOrig&quot;, &amp;__callOrig, tgr_int_type())-&gt;End()</trigger_call>
         <post_trigger_call>CPPTEST_ACTUAL_AFTER_CALL_C(&quot;Check_number&quot;)-&gt;WithRefArg(&quot;calc&quot;, &amp;calc, tgr_ptr_type(tgr_char_type()))-&gt;WithRefArg(&quot;__return&quot;, &amp;__return, tgr_int_type())-&gt;End()</post_trigger_call>
         <orig_call>int __return = Check_number(calc)</orig_call>
         <return_var_decl>int __return = 0</return_var_decl>
         <return_var_expression>return __return</return_var_expression>
      </stub_declaration>
      <definition type="orig" source="code" file_id="2" line="87" col="5"/>
    </Function>
    <Function id="TestSuite_Input_number_c_9f5a5149_testSuiteBegin" name="ZdATestSuite_Input_number_c_9f5a5149_testSuiteBeginX" decorated_name="void TestSuite_Input_number_c_9f5a5149_testSuiteBegin(void)" sorted_name="TestSuite_Input_number_c_9f5a5149_testSuiteBegin">
      <definition type="orig" source="code" file_id="3" line="12" col="427"/>
    </Function>
    <Function id="TestSuite_Input_number_c_9f5a5149_callTest" name="ZcKTestSuite_Input_number_c_9f5a5149_callTestX" decorated_name="int TestSuite_Input_number_c_9f5a5149_callTest(const char *)" sorted_name="TestSuite_Input_number_c_9f5a5149_callTest">
      <definition type="orig" source="code" file_id="3" line="25" col="6"/>
    </Function>
    <Function id="TestSuite_Input_number_c_9f5a5149_testSuiteSetUp" name="ZdATestSuite_Input_number_c_9f5a5149_testSuiteSetUpX" decorated_name="void TestSuite_Input_number_c_9f5a5149_testSuiteSetUp(void)" sorted_name="TestSuite_Input_number_c_9f5a5149_testSuiteSetUp">
      <definition type="orig" source="code" file_id="3" line="28" col="6"/>
    </Function>
    <Function id="TestSuite_Input_number_c_9f5a5149_testSuiteTearDown" name="ZdDTestSuite_Input_number_c_9f5a5149_testSuiteTearDownX" decorated_name="void TestSuite_Input_number_c_9f5a5149_testSuiteTearDown(void)" sorted_name="TestSuite_Input_number_c_9f5a5149_testSuiteTearDown">
      <definition type="orig" source="code" file_id="3" line="35" col="6"/>
    </Function>
    <Function id="TestSuite_Input_number_c_9f5a5149_setUp" name="ZcHTestSuite_Input_number_c_9f5a5149_setUpX" decorated_name="void TestSuite_Input_number_c_9f5a5149_setUp(void)" sorted_name="TestSuite_Input_number_c_9f5a5149_setUp">
      <definition type="orig" source="code" file_id="3" line="42" col="6"/>
    </Function>
    <Function id="TestSuite_Input_number_c_9f5a5149_tearDown" name="ZcKTestSuite_Input_number_c_9f5a5149_tearDownX" decorated_name="void TestSuite_Input_number_c_9f5a5149_tearDown(void)" sorted_name="TestSuite_Input_number_c_9f5a5149_tearDown">
      <definition type="orig" source="code" file_id="3" line="49" col="6"/>
    </Function>
    <Function id="TestSuite_Input_number_c_9f5a5149_test_case" name="ZcLTestSuite_Input_number_c_9f5a5149_test_caseX" decorated_name="void TestSuite_Input_number_c_9f5a5149_test_case(void)" sorted_name="TestSuite_Input_number_c_9f5a5149_test_case">
      <definition type="orig" source="code" file_id="3" line="59" col="6"/>
    </Function>
    <Function id="TestSuite_Input_number_c_9f5a5149_delete" name="ZcITestSuite_Input_number_c_9f5a5149_deleteX" decorated_name="void TestSuite_Input_number_c_9f5a5149_delete(void)" sorted_name="TestSuite_Input_number_c_9f5a5149_delete">
      <definition type="orig" source="code" file_id="3" line="114" col="6"/>
    </Function>
    <Function id="CppTest_StubCallback_TestSuite_Input_number_c_9f5a5149_input_1_Check_number" name="ZeLCppTest_StubCallback_TestSuite_Input_number_c_9f5a5149_input_1_Check_numberX" decorated_name="void CppTest_StubCallback_TestSuite_Input_number_c_9f5a5149_input_1_Check_number(CppTest_StubCallInfo *, int *, char *)" sorted_name="CppTest_StubCallback_TestSuite_Input_number_c_9f5a5149_input_1_Check_number">
      <definition type="orig" source="code" file_id="3" line="179" col="6"/>
    </Function>
    <Function id="TestSuite_Input_number_c_9f5a5149_input" name="ZcHTestSuite_Input_number_c_9f5a5149_inputX" decorated_name="void TestSuite_Input_number_c_9f5a5149_input(void)" sorted_name="TestSuite_Input_number_c_9f5a5149_input">
      <definition type="orig" source="code" file_id="3" line="186" col="6"/>
    </Function>
</Symbols>

