<?xml version="1.0" encoding="UTF-8"?>
<Symbols version="2.0">
    <File name="C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\ucrt\stdio.h" id="1"/>
    <File name="C:\unittest_calc\calculation\calculation\calc.c" id="2"/>
    <File name="C:\unittest_calc\calculation\calculation\tests\autogenerated\ソース ファイル\TestSuite_calc_c.c" id="3"/>
    <Function id="atof" name="ZEatof5X" decorated_name="double atof(const char *)" sorted_name="atof" stub_used="true" needed="true">
      <stub_declaration complete="true">
         <declaration_prefix>EXTERN_C_LINKAGE double __cdecl </declaration_prefix>
         <declaration_suffix>_Stub_atof (const char * _String) </declaration_suffix>
         <orig_declaration>EXTERN_C_LINKAGE double __cdecl atof (const char * _String) </orig_declaration>
         <callback_call>CPPTEST_CALL_STUB_CALLBACK(&quot;atof&quot;, &amp;__return, _String)</callback_call>
         <callback_orig_call>*__return = atof(_String)</callback_orig_call>
         <callback_user_id>atof</callback_user_id>
         <callback_params>CppTest_StubCallInfo* stubCallInfo, double* __return, const char * _String</callback_params>
         <trigger_name>atof</trigger_name>
         <trigger_call>CPPTEST_ACTUAL_CALL_C(&quot;atof&quot;)-&gt;WithRefArg(&quot;_String&quot;, &amp;_String, tgr_ptr_type(tgr_char_type()))-&gt;WithRefArg(&quot;__return&quot;, &amp;__return, tgr_double_type())-&gt;WithRefArg(&quot;__callOrig&quot;, &amp;__callOrig, tgr_int_type())-&gt;End()</trigger_call>
         <post_trigger_call>CPPTEST_ACTUAL_AFTER_CALL_C(&quot;atof&quot;)-&gt;WithRefArg(&quot;_String&quot;, &amp;_String, tgr_ptr_type(tgr_char_type()))-&gt;WithRefArg(&quot;__return&quot;, &amp;__return, tgr_double_type())-&gt;End()</post_trigger_call>
         <orig_call>double __return = atof(_String)</orig_call>
         <return_var_decl>double __return = 0.0</return_var_decl>
         <return_var_expression>return __return</return_var_expression>
      </stub_declaration>
    </Function>
    <Function id="__acrt_iob_func" name="ZP__acrt_iob_func5X" decorated_name="FILE * __acrt_iob_func(unsigned int)" sorted_name="__acrt_iob_func" needed="true">
      <stub_declaration complete="true">
         <declaration_prefix>EXTERN_C_LINKAGE FILE * __cdecl </declaration_prefix>
         <declaration_suffix>_Stub___acrt_iob_func (unsigned _Ix) </declaration_suffix>
         <orig_declaration>EXTERN_C_LINKAGE FILE * __cdecl __acrt_iob_func (unsigned _Ix) </orig_declaration>
         <callback_call>CPPTEST_CALL_STUB_CALLBACK(&quot;__acrt_iob_func&quot;, &amp;__return, _Ix)</callback_call>
         <callback_orig_call>*__return = __acrt_iob_func(_Ix)</callback_orig_call>
         <callback_user_id>__acrt_iob_func</callback_user_id>
         <callback_params>CppTest_StubCallInfo* stubCallInfo, FILE ** __return, unsigned _Ix</callback_params>
         <trigger_name>__acrt_iob_func</trigger_name>
         <trigger_call>CPPTEST_ACTUAL_CALL_C(&quot;__acrt_iob_func&quot;)-&gt;WithRefArg(&quot;_Ix&quot;, &amp;_Ix, tgr_uint_type())-&gt;WithRefArg(&quot;__return&quot;, &amp;__return, tgr_ptr_type(tgr_void_type()))-&gt;WithRefArg(&quot;__callOrig&quot;, &amp;__callOrig, tgr_int_type())-&gt;End()</trigger_call>
         <post_trigger_call>CPPTEST_ACTUAL_AFTER_CALL_C(&quot;__acrt_iob_func&quot;)-&gt;WithRefArg(&quot;_Ix&quot;, &amp;_Ix, tgr_uint_type())-&gt;WithRefArg(&quot;__return&quot;, &amp;__return, tgr_ptr_type(tgr_void_type()))-&gt;End()</post_trigger_call>
         <orig_call>FILE * __return = __acrt_iob_func(_Ix)</orig_call>
         <return_var_decl>FILE * __return = 0</return_var_decl>
         <return_var_expression>return __return</return_var_expression>
         <system_decl_header>corecrt_wstdio.h</system_decl_header>
      </stub_declaration>
    </Function>
    <Function id="__stdio_common_vfprintf" name="ZbH__stdio_common_vfprintf5X" decorated_name="int __stdio_common_vfprintf(unsigned long long, FILE *, const char *, _locale_t, va_list)" sorted_name="__stdio_common_vfprintf" needed="true">
      <stub_declaration complete="true">
         <declaration_prefix>EXTERN_C_LINKAGE int __cdecl </declaration_prefix>
         <declaration_suffix>_Stub___stdio_common_vfprintf (unsigned __int64 _Options, FILE * _Stream, const char * _Format, _locale_t _Locale, va_list _ArgList) </declaration_suffix>
         <orig_declaration>EXTERN_C_LINKAGE int __cdecl __stdio_common_vfprintf (unsigned __int64 _Options, FILE * _Stream, const char * _Format, _locale_t _Locale, va_list _ArgList) </orig_declaration>
         <callback_call>CPPTEST_CALL_STUB_CALLBACK(&quot;__stdio_common_vfprintf&quot;, &amp;__return, _Options, _Stream, _Format, _Locale, _ArgList)</callback_call>
         <callback_orig_call>*__return = __stdio_common_vfprintf(_Options, _Stream, _Format, _Locale, _ArgList)</callback_orig_call>
         <callback_user_id>__stdio_common_vfprintf</callback_user_id>
         <callback_params>CppTest_StubCallInfo* stubCallInfo, int* __return, unsigned __int64 _Options, FILE * _Stream, const char * _Format, _locale_t _Locale, va_list _ArgList</callback_params>
         <trigger_name>__stdio_common_vfprintf</trigger_name>
         <trigger_call>CPPTEST_ACTUAL_CALL_C(&quot;__stdio_common_vfprintf&quot;)-&gt;WithRefArg(&quot;_Options&quot;, &amp;_Options, tgr_ullong_type())-&gt;WithRefArg(&quot;_Stream&quot;, &amp;_Stream, tgr_ptr_type(tgr_void_type()))-&gt;WithRefArg(&quot;_Format&quot;, &amp;_Format, tgr_ptr_type(tgr_char_type()))-&gt;WithRefArg(&quot;_Locale&quot;, &amp;_Locale, tgr_ptr_type(tgr_void_type()))-&gt;WithRefArg(&quot;_ArgList&quot;, &amp;_ArgList, tgr_ptr_type(tgr_char_type()))-&gt;WithRefArg(&quot;__return&quot;, &amp;__return, tgr_int_type())-&gt;WithRefArg(&quot;__callOrig&quot;, &amp;__callOrig, tgr_int_type())-&gt;End()</trigger_call>
         <post_trigger_call>CPPTEST_ACTUAL_AFTER_CALL_C(&quot;__stdio_common_vfprintf&quot;)-&gt;WithRefArg(&quot;_Options&quot;, &amp;_Options, tgr_ullong_type())-&gt;WithRefArg(&quot;_Stream&quot;, &amp;_Stream, tgr_ptr_type(tgr_void_type()))-&gt;WithRefArg(&quot;_Format&quot;, &amp;_Format, tgr_ptr_type(tgr_char_type()))-&gt;WithRefArg(&quot;_Locale&quot;, &amp;_Locale, tgr_ptr_type(tgr_void_type()))-&gt;WithRefArg(&quot;_ArgList&quot;, &amp;_ArgList, tgr_ptr_type(tgr_char_type()))-&gt;WithRefArg(&quot;__return&quot;, &amp;__return, tgr_int_type())-&gt;End()</post_trigger_call>
         <orig_call>int __return = __stdio_common_vfprintf(_Options, _Stream, _Format, _Locale, _ArgList)</orig_call>
         <return_var_decl>int __return = 0</return_var_decl>
         <return_var_expression>return __return</return_var_expression>
         <system_decl_header>stdio.h</system_decl_header>
      </stub_declaration>
    </Function>
    <Function id="printf" name="ZGprintfX" decorated_name="int printf(const char *const, ...)" sorted_name="printf" stub_used="true">
      <stub_declaration complete="true">
         <declaration_prefix>EXTERN_C_LINKAGE int __cdecl </declaration_prefix>
         <declaration_suffix>_Stub_printf (const char *const _Format, ...) </declaration_suffix>
         <orig_declaration>EXTERN_C_LINKAGE int __cdecl printf (const char *const _Format, ...) </orig_declaration>
         <callback_call>CPPTEST_CALL_STUB_CALLBACK(&quot;printf&quot;, &amp;__return, _Format)</callback_call>
         <callback_user_id>printf</callback_user_id>
         <callback_params>CppTest_StubCallInfo* stubCallInfo, int* __return, const char *const _Format</callback_params>
         <trigger_name>printf</trigger_name>
         <trigger_call>CPPTEST_ACTUAL_CALL_C(&quot;printf&quot;)-&gt;WithRefArg(&quot;_Format&quot;, &amp;_Format, tgr_ptr_type(tgr_char_type()))-&gt;WithRefArg(&quot;__return&quot;, &amp;__return, tgr_int_type())-&gt;End()</trigger_call>
         <post_trigger_call>CPPTEST_ACTUAL_AFTER_CALL_C(&quot;printf&quot;)-&gt;WithRefArg(&quot;_Format&quot;, &amp;_Format, tgr_ptr_type(tgr_char_type()))-&gt;WithRefArg(&quot;__return&quot;, &amp;__return, tgr_int_type())-&gt;End()</post_trigger_call>
         <return_var_decl>int __return = 0</return_var_decl>
         <return_var_expression>return __return</return_var_expression>
         <system_decl_header>stdio.h</system_decl_header>
      </stub_declaration>
      <definition type="orig" source="code" file_id="1" line="948" col="26"/>
    </Function>
    <Function id="floor" name="ZFfloor5X" decorated_name="double floor(double)" sorted_name="floor" stub_used="true" needed="true">
      <stub_declaration complete="true">
         <declaration_prefix>EXTERN_C_LINKAGE double __cdecl </declaration_prefix>
         <declaration_suffix>_Stub_floor (double _X) </declaration_suffix>
         <orig_declaration>EXTERN_C_LINKAGE double __cdecl floor (double _X) </orig_declaration>
         <callback_call>CPPTEST_CALL_STUB_CALLBACK(&quot;floor&quot;, &amp;__return, _X)</callback_call>
         <callback_orig_call>*__return = floor(_X)</callback_orig_call>
         <callback_user_id>floor</callback_user_id>
         <callback_params>CppTest_StubCallInfo* stubCallInfo, double* __return, double _X</callback_params>
         <trigger_name>floor</trigger_name>
         <trigger_call>CPPTEST_ACTUAL_CALL_C(&quot;floor&quot;)-&gt;WithRefArg(&quot;_X&quot;, &amp;_X, tgr_double_type())-&gt;WithRefArg(&quot;__return&quot;, &amp;__return, tgr_double_type())-&gt;WithRefArg(&quot;__callOrig&quot;, &amp;__callOrig, tgr_int_type())-&gt;End()</trigger_call>
         <post_trigger_call>CPPTEST_ACTUAL_AFTER_CALL_C(&quot;floor&quot;)-&gt;WithRefArg(&quot;_X&quot;, &amp;_X, tgr_double_type())-&gt;WithRefArg(&quot;__return&quot;, &amp;__return, tgr_double_type())-&gt;End()</post_trigger_call>
         <orig_call>double __return = floor(_X)</orig_call>
         <return_var_decl>double __return = 0.0</return_var_decl>
         <return_var_expression>return __return</return_var_expression>
      </stub_declaration>
    </Function>
    <Function id="strcpy" name="ZGstrcpyX" decorated_name="char * strcpy(char *, const char *)" sorted_name="strcpy" stub_used="true" needed="true">
      <stub_declaration complete="true">
         <declaration_prefix>EXTERN_C_LINKAGE char * __cdecl </declaration_prefix>
         <declaration_suffix>_Stub_strcpy (char * _Destination, const char * _Source) </declaration_suffix>
         <orig_declaration>EXTERN_C_LINKAGE char * __cdecl strcpy (char * _Destination, const char * _Source) </orig_declaration>
         <callback_call>CPPTEST_CALL_STUB_CALLBACK(&quot;strcpy&quot;, &amp;__return, _Destination, _Source)</callback_call>
         <callback_orig_call>*__return = strcpy(_Destination, _Source)</callback_orig_call>
         <callback_user_id>strcpy</callback_user_id>
         <callback_params>CppTest_StubCallInfo* stubCallInfo, char ** __return, char * _Destination, const char * _Source</callback_params>
         <trigger_name>strcpy</trigger_name>
         <trigger_call>CPPTEST_ACTUAL_CALL_C(&quot;strcpy&quot;)-&gt;WithRefArg(&quot;_Destination&quot;, &amp;_Destination, tgr_ptr_type(tgr_char_type()))-&gt;WithRefArg(&quot;_Source&quot;, &amp;_Source, tgr_ptr_type(tgr_char_type()))-&gt;WithRefArg(&quot;__return&quot;, &amp;__return, tgr_ptr_type(tgr_char_type()))-&gt;WithRefArg(&quot;__callOrig&quot;, &amp;__callOrig, tgr_int_type())-&gt;End()</trigger_call>
         <post_trigger_call>CPPTEST_ACTUAL_AFTER_CALL_C(&quot;strcpy&quot;)-&gt;WithRefArg(&quot;_Destination&quot;, &amp;_Destination, tgr_ptr_type(tgr_char_type()))-&gt;WithRefArg(&quot;_Source&quot;, &amp;_Source, tgr_ptr_type(tgr_char_type()))-&gt;WithRefArg(&quot;__return&quot;, &amp;__return, tgr_ptr_type(tgr_char_type()))-&gt;End()</post_trigger_call>
         <orig_call>char * __return = strcpy(_Destination, _Source)</orig_call>
         <return_var_decl>char * __return = _Destination</return_var_decl>
         <return_var_expression>return __return</return_var_expression>
      </stub_declaration>
    </Function>
    <Function id="strlen" name="ZGstrlenX" decorated_name="size_t strlen(const char *)" sorted_name="strlen" stub_used="true" needed="true">
      <stub_declaration complete="true">
         <declaration_prefix>EXTERN_C_LINKAGE size_t __cdecl </declaration_prefix>
         <declaration_suffix>_Stub_strlen (const char * _Str) </declaration_suffix>
         <orig_declaration>EXTERN_C_LINKAGE size_t __cdecl strlen (const char * _Str) </orig_declaration>
         <callback_call>CPPTEST_CALL_STUB_CALLBACK(&quot;strlen&quot;, &amp;__return, _Str)</callback_call>
         <callback_orig_call>*__return = strlen(_Str)</callback_orig_call>
         <callback_user_id>strlen</callback_user_id>
         <callback_params>CppTest_StubCallInfo* stubCallInfo, size_t* __return, const char * _Str</callback_params>
         <trigger_name>strlen</trigger_name>
         <trigger_call>CPPTEST_ACTUAL_CALL_C(&quot;strlen&quot;)-&gt;WithRefArg(&quot;_Str&quot;, &amp;_Str, tgr_ptr_type(tgr_char_type()))-&gt;WithRefArg(&quot;__return&quot;, &amp;__return, tgr_uint_type())-&gt;WithRefArg(&quot;__callOrig&quot;, &amp;__callOrig, tgr_int_type())-&gt;End()</trigger_call>
         <post_trigger_call>CPPTEST_ACTUAL_AFTER_CALL_C(&quot;strlen&quot;)-&gt;WithRefArg(&quot;_Str&quot;, &amp;_Str, tgr_ptr_type(tgr_char_type()))-&gt;WithRefArg(&quot;__return&quot;, &amp;__return, tgr_uint_type())-&gt;End()</post_trigger_call>
         <orig_call>size_t __return = strlen(_Str)</orig_call>
         <return_var_decl>size_t __return = 0U</return_var_decl>
         <return_var_expression>return __return</return_var_expression>
         <system_decl_header>string.h</system_decl_header>
      </stub_declaration>
    </Function>
    <Function id="output" name="ZGoutputX" decorated_name="void output(double *)" sorted_name="output" stub_used="true" needed="true">
      <stub_declaration complete="true">
         <declaration_prefix>EXTERN_C_LINKAGE void </declaration_prefix>
         <declaration_suffix>_Stub_output (double * sum) </declaration_suffix>
         <orig_declaration>EXTERN_C_LINKAGE void output (double * sum) </orig_declaration>
         <callback_call>CPPTEST_CALL_STUB_CALLBACK(&quot;output&quot;, sum)</callback_call>
         <callback_orig_call>output(sum)</callback_orig_call>
         <callback_user_id>output</callback_user_id>
         <callback_params>CppTest_StubCallInfo* stubCallInfo, double * sum</callback_params>
         <trigger_name>output</trigger_name>
         <trigger_call>CPPTEST_ACTUAL_CALL_C(&quot;output&quot;)-&gt;WithRefArg(&quot;sum&quot;, &amp;sum, tgr_ptr_type(tgr_double_type()))-&gt;WithRefArg(&quot;__callOrig&quot;, &amp;__callOrig, tgr_int_type())-&gt;End()</trigger_call>
         <post_trigger_call>CPPTEST_ACTUAL_AFTER_CALL_C(&quot;output&quot;)-&gt;WithRefArg(&quot;sum&quot;, &amp;sum, tgr_ptr_type(tgr_double_type()))-&gt;End()</post_trigger_call>
         <orig_call>output(sum)</orig_call>
      </stub_declaration>
    </Function>
    <Function id="calculation" name="ZLcalculationX" decorated_name="void calculation(char *)" sorted_name="calculation">
      <definition type="orig" source="code" file_id="2" line="3" col="6"/>
    </Function>
    <Function id="TestSuite_calc_c_c315b8dd_testSuiteBegin" name="ZcITestSuite_calc_c_c315b8dd_testSuiteBeginX" decorated_name="void TestSuite_calc_c_c315b8dd_testSuiteBegin(void)" sorted_name="TestSuite_calc_c_c315b8dd_testSuiteBegin">
      <definition type="orig" source="code" file_id="3" line="12" col="371"/>
    </Function>
    <Function id="TestSuite_calc_c_c315b8dd_callTest" name="ZcCTestSuite_calc_c_c315b8dd_callTestX" decorated_name="int TestSuite_calc_c_c315b8dd_callTest(const char *)" sorted_name="TestSuite_calc_c_c315b8dd_callTest">
      <definition type="orig" source="code" file_id="3" line="20" col="6"/>
    </Function>
    <Function id="TestSuite_calc_c_c315b8dd_testSuiteSetUp" name="ZcITestSuite_calc_c_c315b8dd_testSuiteSetUpX" decorated_name="void TestSuite_calc_c_c315b8dd_testSuiteSetUp(void)" sorted_name="TestSuite_calc_c_c315b8dd_testSuiteSetUp">
      <definition type="orig" source="code" file_id="3" line="23" col="6"/>
    </Function>
    <Function id="TestSuite_calc_c_c315b8dd_testSuiteTearDown" name="ZcLTestSuite_calc_c_c315b8dd_testSuiteTearDownX" decorated_name="void TestSuite_calc_c_c315b8dd_testSuiteTearDown(void)" sorted_name="TestSuite_calc_c_c315b8dd_testSuiteTearDown">
      <definition type="orig" source="code" file_id="3" line="30" col="6"/>
    </Function>
    <Function id="TestSuite_calc_c_c315b8dd_setUp" name="ZbPTestSuite_calc_c_c315b8dd_setUpX" decorated_name="void TestSuite_calc_c_c315b8dd_setUp(void)" sorted_name="TestSuite_calc_c_c315b8dd_setUp">
      <definition type="orig" source="code" file_id="3" line="37" col="6"/>
    </Function>
    <Function id="TestSuite_calc_c_c315b8dd_tearDown" name="ZcCTestSuite_calc_c_c315b8dd_tearDownX" decorated_name="void TestSuite_calc_c_c315b8dd_tearDown(void)" sorted_name="TestSuite_calc_c_c315b8dd_tearDown">
      <definition type="orig" source="code" file_id="3" line="44" col="6"/>
    </Function>
    <Function id="TestSuite_calc_c_c315b8dd_calculation" name="ZcFTestSuite_calc_c_c315b8dd_calculationX" decorated_name="void TestSuite_calc_c_c315b8dd_calculation(void)" sorted_name="TestSuite_calc_c_c315b8dd_calculation">
      <definition type="orig" source="code" file_id="3" line="53" col="6"/>
    </Function>
</Symbols>

